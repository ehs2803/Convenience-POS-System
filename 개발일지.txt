============================================================
2022.05.09.월
- 부트스트랩 template mainpage 적용
- template, static의 차이와 타임리프 관련때문에 매핑일 실패했으나 성공.

============================================================
2022.05.11.수
- mysql 연결성공.
- mysql에 member 테이블 생성.
- memberdao 클래스에서 insert 메서드 정의해서 testmain 만들어서 insert 하는거 테스트 완료 및 성공.

============================================================
2022.05.12.목
- footer. navar.html 나눔.
- about, contact page html만들어서 연결 성공.
- member 서비스를 위한 membercontroller 분리.
- member 로그인, 회원가입을 위한 html 연결 및 form 부트스트랩 디자인 가져다 적용함.

============================================================
2022.05.13.금
- 로그인, 회원가입, 로그아웃 기능 완성함. -> 테스트 성공.
- 로그인, 로그아웃 기능에서 세션사용함.

============================================================
2022.05.14.토
- 회원 로그인 시 상세페이지 구현. 
- 상세페이지에서 정보수정하기 버튼 누르면 update form으로 이동. email을 제외한 정보 수정 가능함.
- th:checked, th:if, th:text 등을 이용해서 구현함.
- update form에서 email은 수정할 수 없어서 inpu태그에 disabled를 하면 action으로 넘어가지 못해 readonly로 설정함.

============================================================
2022.05.15.일
- mysql 테이블에 대해 테이블이름을 테이블이름_TB 형식과 칼럼은 모두 대문자로 교체.
- MEMBER_TB, PRODUCT_TB, PRODUCT_HISTORY_TB 테이블 만듬.
- 제품에 대한 컨트롤러, dao, 서비스 만듬.
- 제품 입고(새로운 제품) form 만들어 매핑함.
- ProductDao, ProductHistoryDao 구현함.
- 로그인 시 url에 jsessionid가 나타나는 문제를 해결하기 위해 application.properties에 server.servlet.session.tracking-modes=cookie 추가
- 새로운 제품 추가하는거 구현, 테스트 완료 - > product table, producthistory table에 저장 완료.
- 저장한 제품 표형태로 출력 성공.

============================================================
2022.05.16.월
- 재고 입고 기능은 구현함. 기존 제품 수량 추가 입고하기 기능 구현. 테스트 완료.

============================================================
2022.05.17.화
- 재고현황 기능 구현함. 현재 남은 수량과 함께 상세보기를 클릭하면 그 제품에 대해서 수량 변경 이력이 표 형태로 출력된다.
- 제품 상세 수정 기능 구현함. 제품의 이름, 가격을 수정할 수 있음. 

============================================================
2022.05.18.수
- product_tb에 판매 여부를 나타내는 칼럼 state(tinyint) 추가. product 추가할 때 적용
- product_state_history_tb 테이블 만듬.
- 상품 수정 페이지에서 상품 판매 중단, 재개 버튼 만들어서 각 테이블에 반영하게 함.
- 새로만든 칼럼, 테이블에 대해서 기존 기능(상품 추가, 상품 업데이트) 동작 시 새로만든 칼럼, 테이블에 관련 정보 저장되게 구현.
- 상품 수정 페이지에서 특정 제품 선택하면 수정 현황 보여지게 구현.

============================================================
2022.05.19.목
- 계정관리 페이지에서 자신이 변경시킨 상품 상세, 상품 상태 변경 내역을 볼 수 있음. 
- 계정관리 페이지에서 로그인 유저가 매니저 직책이면 다른 계정 목록을 볼 수 있고, 상세보기를 누르면 그 직원 혹은 매니저의 활동내역 조회가능.

============================================================
2022.05.20.금
- footer 맨 아래로 보내기. content 내용 가운데 정렬 및 왼쪽, 오른쪽 마진 설정.
- 계산기능을 위한 sale_tb, sale_detail_tb, sale_cart_tb mysql에 만듬.
- 계산기능을 위한 domain, dao, service, controller 만듬.

============================================================
2022.05.21.토
- sale 페이지에서 스크롤 두개 나눠서 왼쪽은 판매중인 상품, 오른쪽에는 계산 대기중인 상품 표시
- 판매중인 상품 개수 정해서 버튼 누르면 오른쪽 스크롤 영역으로 넘어감.
- 하단에 초기화, 현재 계산할 총 금액 나타남.
- 계산하기 버튼도 만들었지만 계산하기 기능은 구현 안함.

============================================================
2022.05.22.일
- saleDao, saleDetailDao 구현해서 계산하기 버튼 누르면 productHistory tb에까지 정상적으로 데이터 저장됨.
- 계정상세 페이지에 들어가면 그 사람이 계산한 판매 내역을 볼 수 있음.
- 계정상세 페이지 내 역할이 매니저인 경우 다른 계정의 활동내역도 볼 수 있는데 여기에 그 다른 계정의 판매 내역을 볼 수 있음.
- 판매 통계를 위한 controller, service, html 만듬.
- 판매통계 버튼 누르면 모든 판매 기록이 나타남.  상세보기를 누르면 어떤 상품들을 구매했는지 알 수 있음.
- 계정상세보기 페이지에서 판매 내역에서 상세보기 누르면 위에 만든 페이지로 이동
- 계정상세보기 페이지에서 매니저인 경우 다른 계정 판매내역에서 상세보기 누르면 위에서 만든 페이지로 이동

============================================================
2022.05.23.월
- 통계서비스에서 ajax post를 이용해 특정 날짜 선택하면 그날 판매한 제품을 파이 차트로 보여줌. -> 구글 차트 사용
- 통계서비스에서 특정 날짜 선택하면 그날 판매한 제품 상위 5개에 대해서 표형태로 보여줌 -> 구글 차트 사용
- 최대 판매 개수, 최대 판매액, 일, 주, 월에 대해서 6개 파이차트, 표 레이아웃에 그려넣음.

